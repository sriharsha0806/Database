/*Query 1 - understand more about the movies that families are watching*/
/*The following query joined 5 tables Category, Film Category, Inventory, Rental and Film.
 Final result displays Film Title, Category name and count on Rentals*/
with t1 AS 
(SELECT *
FROM category c
JOIN film_category fc
ON c.category_id = fc.category_id
JOIN film f
ON f.film_id = fc.film_id
JOIN inventory i
ON i.film_id = f.film_id
JOIN rental r
on r.inventory_id = i.inventory_id
WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music'))

SELECT t1.title film_title, t1.name category_name, COUNT(t1.title) rental_count
FROM t1
GROUP BY 1, 2
ORDER BY category_name, film_title

/*Query 2 - Need to how the length of rental duration of these family-friendly movies 
  compares to the duration that all movies are rented for. Provide a table with the movie titles and divide them into 
4 levels (first_quarter, second_quarter, third_quarter, and final_quarter) based on the quartiles (25%, 50%, 75%) of the rental duration for movies across all categories? Make sure to also indicate the category 
that these family-friendly movies fall into. */

SELECT f.title, c.name, f.rental_duration, 
       ntile(4)over(order by rental_duration) as standard_quartile
FROM category c 
JOIN film_category fc 
ON c.category_id = fc.category_id 
JOIN film f 
ON f.film_id = fc.film_id 
WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', '
    Family', 'Music')
ORDER BY standard_quartile;

/*Query 3 - Returns a Table with the family-friendly category, each of the quertiles, and the 
corresponding count of movies within each combination of film category for each corresponding 
rental duration category*/
WITH t1 AS
(SELECT c.name category,
	NTILE(4) OVER (ORDER BY f.rental_duration) AS standard_quartile

FROM category c
JOIN film_category fc
ON c.category_id = fc.category_id
JOIN film f
ON f.film_id = fc.film_id
WHERE c.name IN ('Animation', 'Children','Classics','Comedy','Family','Music')
ORDER BY category, standard_quartile)

SELECT t1.category, t1.standard_quartile, COUNT(*)
FROM t1
GROUP BY 1,2
ORDER BY category, standard_quartile

/*Query 4 - Returns the store ID for the store, the year and month 
and the number of rental orders each store has fulfilled for that month.*/

WITH t1 AS
(SELECT DATE_PART('month', rental_date) as month, DATE_PART('year', rental_date) as year, store_id, COUNT (film_id) OVER (PARTITION BY DATE_TRUNC('month', rental_date) ORDER BY store_id) as count_rentals
FROM rental r
JOIN inventory i
ON i.inventory_id = r.inventory_id)

SELECT t1.month rental_month, t1.year rental_year, t1.store_id, COUNT(count_rentals) count_rentals
FROM t1
GROUP BY 1, 2, 3
ORDER BY count_rentals DESC

